{"repository_name":"github.com/hkalexling/image_size.cr","body":"# image_size.cr\n\n![CI](https://github.com/hkalexling/image_size.cr/workflows/CI/badge.svg)\n\nGet and modify the image dimension (width and height) of various image types.\n\nSupported types:\n\n- through [`stb_image.h`](https://github.com/nothings/stb/blob/master/stb_image.h): JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC\n- through [`libwebp`](https://github.com/webmproject/libwebp): WebP\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n image_size:\n   github: hkalexling/image_size.cr\n```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"image_size\"\n\n# Get dimension from the path to the image file\nsize = ImageSize.get \"test.png\"\npp size.width\npp size.height\n\n# Get dimension from binary data\nfile = File.new \"test.png\"\nbytes = Bytes.new file.size\nfile.read bytes\nfile.close\nsize = ImageSize.get bytes\npp size.width\npp size.height\n\n# Resize the image width to 1024. The height is automatically calculated\n#\tto keep the aspect ratio\nbytes = ImageSize.resize \"test.png\", width: 1024\nFile.write \"test-1024.png\", bytes\n\n# Resize the image height to 256. The width is automatically calculated\n#\tto keep the aspect ratio\nbytes = ImageSize.resize \"test.png\", height: 256\nFile.write \"test-256.png\", bytes\n\n# Resize the image dimension to 1024 x 1024\nbytes = ImageSize.resize \"test.png\", width: 1024, height: 1024\nFile.write \"test-1024-1024.png\", bytes\n```\n\n## Contributors\n\n- [Alex Ling](https://github.com/hkalexling) - creator and maintainer\n","program":{"html_id":"github.com/hkalexling/image_size.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/hkalexling/image_size.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/hkalexling/image_size.cr/ImageSize","path":"ImageSize.html","kind":"struct","full_name":"ImageSize","name":"ImageSize","abstract":false,"superclass":{"html_id":"github.com/hkalexling/image_size.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/hkalexling/image_size.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/hkalexling/image_size.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/hkalexling/image_size.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"image_size.cr","line_number":3,"url":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr"}],"repository_name":"github.com/hkalexling/image_size.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"resize(bytes:Bytes,*,width=0,height=0):Bytes-class-method","html_id":"resize(bytes:Bytes,*,width=0,height=0):Bytes-class-method","name":"resize","doc":"Resizes an image from binary data.\n\nNOTE: At least one of the named arguments must be provided.\n\nWhen only `width` is set, the `height` will be automatically calculated to\n  keep the aspect ratio.\n```\nbytes = ImageSize.resize data, width: 1024\nFile.write \"1024.png\", bytes\n```\n\nWhen only `height` is set, the `width` will be automatically calculated to\n  keep the aspect ratio.\n```\nbytes = ImageSize.resize data, height: 256\nFile.write \"256.png\", bytes\n```\n\nSeting both `width` and `height` will break the aspect ratio.\n```\nbytes = ImageSize.resize data, width: 1024, height: 1024\nFile.write \"1024-1024.png\", bytes\n```","summary":"<p>Resizes an image from binary data.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"width","doc":null,"default_value":"0","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"0","external_name":"height","restriction":""}],"args_string":"(bytes : Bytes, *, width = <span class=\"n\">0</span>, height = <span class=\"n\">0</span>) : Bytes","source_link":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr#L121","def":{"name":"resize","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"width","doc":null,"default_value":"0","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"0","external_name":"height","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"size = self.get(bytes)\nif (width == 0) && (height == 0)\n  raise(\"At least one of the named arguments `width:` and `height:` must be non-zero\")\nelse\n  if width == 0\n    width = ((height / size.height) * size.width).round.to_i\n  else\n    if height == 0\n      height = ((width / size.width) * size.height).round.to_i\n    end\n  end\nend\nif self.is_webp(bytes)\n  self.webp_resize(bytes, self.new(width, height))\nelse\n  self.stbi_resize(bytes, self.new(width, height))\nend\n"}},{"id":"resize(filename:String,*,width=0,height=0):Bytes-class-method","html_id":"resize(filename:String,*,width=0,height=0):Bytes-class-method","name":"resize","doc":"Same as `self.resize` but reads the image from a filename.","summary":"<p>Same as <code>self<a href=\"ImageSize.html#resize(bytes:Bytes,*,width=0,height=0):Bytes-class-method\">.resize</a></code> but reads the image from a filename.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"width","doc":null,"default_value":"0","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"0","external_name":"height","restriction":""}],"args_string":"(filename : String, *, width = <span class=\"n\">0</span>, height = <span class=\"n\">0</span>) : Bytes","source_link":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr#L140","def":{"name":"resize","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"width","doc":null,"default_value":"0","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"0","external_name":"height","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"file = File.new(filename)\nbytes = Bytes.new(file.size)\nfile.read(bytes)\nfile.close\nself.resize(bytes, width: width, height: height)\n"}}],"constructors":[{"id":"get(bytes:Bytes):ImageSize-class-method","html_id":"get(bytes:Bytes):ImageSize-class-method","name":"get","doc":"Gets image size from binary data.\n```\nfile = File.new \"test.png\"\nbytes = Bytes.new file.size\nfile.read bytes\nfile.close\nsize = ImageSize.get bytes\npp size.width\npp size.height\n```","summary":"<p>Gets image size from binary data.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : ImageSize","source_link":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr#L23","def":{"name":"get","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ImageSize","visibility":"Public","body":"if self.is_webp(bytes)\n  self.get_webp(bytes)\nelse\n  self.get_stbi(bytes)\nend"}},{"id":"get(filename:String):ImageSize-class-method","html_id":"get(filename:String):ImageSize-class-method","name":"get","doc":"Gets image size from filename.\n```\nsize = ImageSize.get \"test.png\"\npp size.width\npp size.height\n```","summary":"<p>Gets image size from filename.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : ImageSize","source_link":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr#L37","def":{"name":"get","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ImageSize","visibility":"Public","body":"file = File.new(filename)\nbytes = Bytes.new(file.size)\nfile.read(bytes)\nfile.close\nself.get(bytes)\n"}}],"instance_methods":[{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr#L5","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/hkalexling/image_size.cr/blob/a698fec0ca59c671ceebcd549c4fc6054fc78d2d/src/image_size.cr#L4","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width"}}],"macros":[],"types":[]}]}}